const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");

// –ë–µ—Ä–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const TOKEN = process.env.BOT_TOKEN;
const GAME_URL = process.env.GAME_URL;
const SERVER_URL = process.env.GAME_URL; // URL —Å–µ—Ä–≤–µ—Ä–∞ –∏–≥—Ä—ã

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
const bot = new TelegramBot(TOKEN, { polling: true });

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start –∏ /play
bot.onText(/\/start|\/play/, (msg) => {
    const chatId = msg.chat.id;

    const keyboard = {
        reply_markup: {
            inline_keyboard: [
                [{ text: "üéÆ –ò–≥—Ä–∞—Ç—å", web_app: { url: GAME_URL } }]
            ]
        }
    };

    bot.sendMessage(chatId, "–ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É!", keyboard);
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã —á–µ—Ä–µ–∑ Game Platform
bot.on("callback_query", (query) => {
    const chatId = query.message.chat.id;

    bot.answerCallbackQuery(query.id, { url: GAME_URL }); // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–≥—Ä—É
});

// –ö–æ–º–∞–Ω–¥–∞ /top –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ª—É—á—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
bot.onText(/\/top/, async (msg) => {
    const chatId = msg.chat.id;

    try {
        const response = await axios.get(`${SERVER_URL}/leaderboard`);
        const leaderboard = response.data;

        if (!leaderboard.length) {
            return bot.sendMessage(chatId, "‚è≥ –ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.");
        }

        let leaderboardText = "üèÜ **–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤:**\n";
        leaderboard.forEach((player, index) => {
            leaderboardText += `${index + 1}. ${player.username}: ${player.score} –æ—á–∫–æ–≤\n`;
        });

        bot.sendMessage(chatId, leaderboardText);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–ø-–∏–≥—Ä–æ–∫–æ–≤:", error);
        bot.sendMessage(chatId, "‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.");
    }
});